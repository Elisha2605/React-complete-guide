{"ast":null,"code":"var _jsxFileName = \"/Users/elishangoma/Desktop/react-complete-guide/5._Food-Order-App/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartSate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {}\n\n    const updatetedItem = state.items.concat(action.item);\n    return {\n      items: updatetedItem,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartSate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartSate);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"Y2/KCUJJh+HOxkYjUbHQBqDvWXo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartSate","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","updatetedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/Users/elishangoma/Desktop/react-complete-guide/5._Food-Order-App/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\n\n\nconst defaultCartSate = {\n  items: [],\n  totalAmount: 0\n}\n\nconst cartReducer = ((state, action) => {\n\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n    \n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [ ...state.items]\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      \n    }\n\n    const updatetedItem = state.items.concat(action.item)\n    return {\n      items: updatetedItem,\n      totalAmount: updatedTotalAmount\n    }\n  }\n  return defaultCartSate\n})\n\nconst CartProvider = (props) => {\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartSate)\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: 'ADD', item: item })\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: 'REMOVE', id: id })\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAIA,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,EADe;EAEtBC,WAAW,EAAE;AAFS,CAAxB;;AAKA,MAAMC,WAAW,GAAI,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAEtC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;IAEA,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA9B;IACA,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;IAEA,IAAII,YAAJ;;IAEA,IAAID,gBAAJ,EAAsB;MACpB,MAAME,WAAW,GAAG,EAClB,GAAGF,gBADe;QAElBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;MAF5B,CAApB;MAIAK,YAAY,GAAG,CAAE,GAAGX,KAAK,CAACH,KAAX,CAAf;MACAc,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;IACD,CAPD,MAOO,CAEN;;IAED,MAAMC,aAAa,GAAGb,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBb,MAAM,CAACG,IAA1B,CAAtB;IACA,OAAO;MACLP,KAAK,EAAEgB,aADF;MAELf,WAAW,EAAEK;IAFR,CAAP;EAID;;EACD,OAAOP,eAAP;AACD,CA5BD;;AA8BA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAE9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAACK,WAAD,EAAcH,eAAd,CAAlD;;EAEA,MAAMuB,oBAAoB,GAAIf,IAAD,IAAU;IACrCc,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMgB,yBAAyB,GAAIX,EAAD,IAAQ;IACxCS,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,QAAR;MAAkBO,EAAE,EAAEA;IAAtB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMY,WAAW,GAAG;IAClBxB,KAAK,EAAEoB,SAAS,CAACpB,KADC;IAElBC,WAAW,EAAEmB,SAAS,CAACnB,WAFL;IAGlBwB,OAAO,EAAEH,oBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBD;;GAAMT,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}